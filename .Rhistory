Promotoria1 <- planilha_controle %>% filter(Promotoria == "1ª PJF")
# Chunk 13
#Itens necessários:
#1- Quantidade de datas de saída sem que tenha uma "Servidora Responsável"
#(Obs: Para pegar erros)
#2- Quantidade de datas de saída sem que tenha um "Check-list - responsável"
#(*trata-se dos estagiários)    (Obs: Para pegar erros)
#3- Total de lançamentos(total de linhas) e total de procedimentos únicos (total de números MPRJ únicos)
# IGUAL à ABA DASHBOARD
#4- Tempo total do procedimento(SOMA(SAIDA-ENTRADA) * de todos os registros), de todos os procedimentos que
#estão na Secretaria.
View(df_Local)
# Chunk 1: global
if (!require(tidyverse)) install.packages("tidyverse")
if (!require(readxl)) install.packages("readxl")
if (!require(xlsx)) install.packages("xlsx")
if (!require(tidyr)) install.packages("tidyr")
if (!require(flexdashboard)) install.packages("flexdashboard")
if (!require(dplyr)) install.packages("dplyr")
library(tidyverse)
library(readxl)
library(xlsx)
library(tidyr)
library(flexdashboard)
library(dplyr)
# Chunk 2
knitr::opts_chunk$set(cache=F)
planilha_controle  <- read.xlsx("C:/Users/Lucas/Desktop/MPRJ/Atual - 2020 NOVO - EM 07-07-2020.xlsx", encoding="UTF-8", sheetName = "Assessoria")
#contagem total de procedimentos
#contagem_total  <- planilha_controle %>%
#  group_by(Procedimento) %>%
#  summarise(Contagem = length(unique(Promotoria)))
contagem_total  <- nrow(planilha_controle %>% group_by(Procedimento))
#primeira <- planilha_controle %>%  filter(Promotoria  == "1ª PJF")
Promotoria <- table(planilha_controle$Promotoria)
df_Prom <- data.frame(Promotoria)
df_Prom <- rename(df_Prom, Promotoria = Var1, Total = Freq)
Local <- table(planilha_controle$`Local.no.MP`,planilha_controle$Promotoria)
df_Local <- data.frame(Local)
df_Local <- rename(df_Local, `Local.no.MP` = Var1, Promotoria = Var2, Total = Freq)
# Chunk 3
valueBox((contagem_total), icon = "fa-book", color = "green")
# Chunk 4
df_Prom %>%
group_by(Promotoria) %>%
ggplot(aes(x= Local,
y= Total)) +
geom_col() +
geom_label(aes(label = Total),
color = "white") +
theme(legend.position = "none") +
labs(x = "Promotorias",
y = "Total de lançamentos")
# Chunk 5
df_Local %>%
group_by(Local) %>%
ggplot(aes(x= Promotoria,
y= Total,
color = Local.no.MP)) +
geom_col() +
geom_label(aes(label = Total),
color = "white") +
theme(legend.position = "none") +
labs(x = "Promotorias",
y = "Lançamentos")
# Chunk 6
df_data_saida <- planilha_controle[!is.na(planilha_controle$Data.da.saída),]
n_saida <- nrow(df_data_saida)
n_sem_responsavel <- nrow(df_data_saida[is.na(df_data_saida$Servidora.Responsável),])
n_sem_check_responsavel <- nrow(df_data_saida[is.na(df_data_saida$Check.list...responsável),])
# Chunk 7
valueBox(str_c("Existem ", n_saida, " registros "), icon = "fa-exclamation-circle", color = "teal")
# Chunk 8
valueBox(str_c("Existem ", n_saida, " registros "), icon = "fa-check-circle", color = "olive")
# Chunk 9
valueBox((contagem_total), icon = "fa-book", color = "green")
# Chunk 10
valueBox(nrow(planilha_controle %>% group_by(Procedimento) %>% distinct(Procedimento)), icon = "fa-inbox", color = "purple")
# Chunk 11
Promotoria1 <- planilha_controle %>% filter(Promotoria == "1ª PJF")
# Chunk 12
#Itens necessários:
#1- Quantidade de datas de saída sem que tenha uma "Servidora Responsável"
#(Obs: Para pegar erros)
#2- Quantidade de datas de saída sem que tenha um "Check-list - responsável"
#(*trata-se dos estagiários)    (Obs: Para pegar erros)
#3- Total de lançamentos(total de linhas) e total de procedimentos únicos (total de números MPRJ únicos)
# IGUAL à ABA DASHBOARD
#4- Tempo total do procedimento(SOMA(SAIDA-ENTRADA) * de todos os registros), de todos os procedimentos que
#estão na Secretaria.
View(df_Prom)
# Chunk 1: global
if (!require(tidyverse)) install.packages("tidyverse")
if (!require(readxl)) install.packages("readxl")
if (!require(xlsx)) install.packages("xlsx")
if (!require(tidyr)) install.packages("tidyr")
if (!require(flexdashboard)) install.packages("flexdashboard")
if (!require(dplyr)) install.packages("dplyr")
library(tidyverse)
library(readxl)
library(xlsx)
library(tidyr)
library(flexdashboard)
library(dplyr)
# Chunk 2
knitr::opts_chunk$set(cache=F)
planilha_controle  <- read.xlsx("C:/Users/Lucas/Desktop/MPRJ/Atual - 2020 NOVO - EM 07-07-2020.xlsx", encoding="UTF-8", sheetName = "Assessoria")
#contagem total de procedimentos
#contagem_total  <- planilha_controle %>%
#  group_by(Procedimento) %>%
#  summarise(Contagem = length(unique(Promotoria)))
contagem_total  <- nrow(planilha_controle %>% group_by(Procedimento))
#primeira <- planilha_controle %>%  filter(Promotoria  == "1ª PJF")
Promotoria <- table(planilha_controle$Promotoria)
df_Prom <- data.frame(Promotoria)
df_Prom <- rename(df_Prom, Promotoria = Var1, Total = Freq)
Local <- table(planilha_controle$`Local.no.MP`,planilha_controle$Promotoria)
df_Local <- data.frame(Local)
df_Local <- rename(df_Local, `Local.no.MP` = Var1, Promotoria = Var2, Total = Freq)
# Chunk 3
valueBox((contagem_total), icon = "fa-book", color = "green")
# Chunk 4
df_Prom %>%
group_by(Promotoria) %>%
ggplot(aes(x= Local,
y= Total)) +
geom_col() +
geom_label(aes(label = Total),
color = "white") +
theme(legend.position = "none") +
labs(x = "Promotorias",
y = "Total de lançamentos")
# Chunk 5
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total)) +
geom_col() +
geom_label(aes(label = Total),
color = "white") +
theme(legend.position = "none") +
labs(x = "Promotorias",
y = "Lançamentos")
# Chunk 6
df_data_saida <- planilha_controle[!is.na(planilha_controle$Data.da.saída),]
n_saida <- nrow(df_data_saida)
n_sem_responsavel <- nrow(df_data_saida[is.na(df_data_saida$Servidora.Responsável),])
n_sem_check_responsavel <- nrow(df_data_saida[is.na(df_data_saida$Check.list...responsável),])
# Chunk 7
valueBox(str_c("Existem ", n_saida, " registros "), icon = "fa-exclamation-circle", color = "teal")
# Chunk 8
valueBox(str_c("Existem ", n_saida, " registros "), icon = "fa-check-circle", color = "olive")
# Chunk 9
valueBox((contagem_total), icon = "fa-book", color = "green")
# Chunk 10
valueBox(nrow(planilha_controle %>% group_by(Procedimento) %>% distinct(Procedimento)), icon = "fa-inbox", color = "purple")
# Chunk 11
Promotoria1 <- planilha_controle %>% filter(Promotoria == "1ª PJF")
# Chunk 12
#Itens necessários:
#1- Quantidade de datas de saída sem que tenha uma "Servidora Responsável"
#(Obs: Para pegar erros)
#2- Quantidade de datas de saída sem que tenha um "Check-list - responsável"
#(*trata-se dos estagiários)    (Obs: Para pegar erros)
#3- Total de lançamentos(total de linhas) e total de procedimentos únicos (total de números MPRJ únicos)
# IGUAL à ABA DASHBOARD
#4- Tempo total do procedimento(SOMA(SAIDA-ENTRADA) * de todos os registros), de todos os procedimentos que
#estão na Secretaria.
View(df_Local)
# Chunk 1: global
if (!require(tidyverse)) install.packages("tidyverse")
if (!require(readxl)) install.packages("readxl")
if (!require(xlsx)) install.packages("xlsx")
if (!require(tidyr)) install.packages("tidyr")
if (!require(flexdashboard)) install.packages("flexdashboard")
if (!require(dplyr)) install.packages("dplyr")
library(tidyverse)
library(readxl)
library(xlsx)
library(tidyr)
library(flexdashboard)
library(dplyr)
# Chunk 2
knitr::opts_chunk$set(cache=F)
planilha_controle  <- read.xlsx("C:/Users/Lucas/Desktop/MPRJ/Atual - 2020 NOVO - EM 07-07-2020.xlsx", encoding="UTF-8", sheetName = "Assessoria")
#contagem total de procedimentos
#contagem_total  <- planilha_controle %>%
#  group_by(Procedimento) %>%
#  summarise(Contagem = length(unique(Promotoria)))
contagem_total  <- nrow(planilha_controle %>% group_by(Procedimento))
#primeira <- planilha_controle %>%  filter(Promotoria  == "1ª PJF")
Promotoria <- table(planilha_controle$Promotoria)
df_Prom <- data.frame(Promotoria)
df_Prom <- rename(df_Prom, Promotoria = Var1, Total = Freq)
Local <- table(planilha_controle$`Local.no.MP`,planilha_controle$Promotoria)
df_Local <- data.frame(Local)
df_Local <- rename(df_Local, `Local.no.MP` = Var1, Promotoria = Var2, Total = Freq)
# Chunk 3
valueBox((contagem_total), icon = "fa-book", color = "green")
# Chunk 4
df_Prom %>%
group_by(Promotoria) %>%
ggplot(aes(x= Local,
y= Total)) +
geom_col() +
geom_label(aes(label = Total),
color = "white") +
theme(legend.position = "none") +
labs(x = "Promotorias",
y = "Total de lançamentos")
# Chunk 5
df_Local %>%
group_by(Promotoria) %>%
ggplot(aes(x= Local.no.MP,
y= Total)) +
geom_col() +
geom_label(aes(label = Total),
color = "white") +
theme(legend.position = "none") +
labs(x = "Promotorias",
y = "Lançamentos")
# Chunk 6
df_data_saida <- planilha_controle[!is.na(planilha_controle$Data.da.saída),]
n_saida <- nrow(df_data_saida)
n_sem_responsavel <- nrow(df_data_saida[is.na(df_data_saida$Servidora.Responsável),])
n_sem_check_responsavel <- nrow(df_data_saida[is.na(df_data_saida$Check.list...responsável),])
# Chunk 7
valueBox(str_c("Existem ", n_saida, " registros "), icon = "fa-exclamation-circle", color = "teal")
# Chunk 8
valueBox(str_c("Existem ", n_saida, " registros "), icon = "fa-check-circle", color = "olive")
# Chunk 9
valueBox((contagem_total), icon = "fa-book", color = "green")
# Chunk 10
valueBox(nrow(planilha_controle %>% group_by(Procedimento) %>% distinct(Procedimento)), icon = "fa-inbox", color = "purple")
# Chunk 11
Promotoria1 <- planilha_controle %>% filter(Promotoria == "1ª PJF")
# Chunk 12
#Itens necessários:
#1- Quantidade de datas de saída sem que tenha uma "Servidora Responsável"
#(Obs: Para pegar erros)
#2- Quantidade de datas de saída sem que tenha um "Check-list - responsável"
#(*trata-se dos estagiários)    (Obs: Para pegar erros)
#3- Total de lançamentos(total de linhas) e total de procedimentos únicos (total de números MPRJ únicos)
# IGUAL à ABA DASHBOARD
#4- Tempo total do procedimento(SOMA(SAIDA-ENTRADA) * de todos os registros), de todos os procedimentos que
#estão na Secretaria.
# Chunk 1: global
if (!require(tidyverse)) install.packages("tidyverse")
if (!require(readxl)) install.packages("readxl")
if (!require(xlsx)) install.packages("xlsx")
if (!require(tidyr)) install.packages("tidyr")
if (!require(flexdashboard)) install.packages("flexdashboard")
if (!require(dplyr)) install.packages("dplyr")
library(tidyverse)
library(readxl)
library(xlsx)
library(tidyr)
library(flexdashboard)
library(dplyr)
# Chunk 2
knitr::opts_chunk$set(cache=F)
planilha_controle  <- read.xlsx("C:/Users/Lucas/Desktop/MPRJ/Atual - 2020 NOVO - EM 07-07-2020.xlsx", encoding="UTF-8", sheetName = "Assessoria")
#contagem total de procedimentos
#contagem_total  <- planilha_controle %>%
#  group_by(Procedimento) %>%
#  summarise(Contagem = length(unique(Promotoria)))
contagem_total  <- nrow(planilha_controle %>% group_by(Procedimento))
#primeira <- planilha_controle %>%  filter(Promotoria  == "1ª PJF")
Promotoria <- table(planilha_controle$Promotoria)
df_Prom <- data.frame(Promotoria)
df_Prom <- rename(df_Prom, Promotoria = Var1, Total = Freq)
Local <- table(planilha_controle$`Local.no.MP`,planilha_controle$Promotoria)
df_Local <- data.frame(Local)
df_Local <- rename(df_Local, `Local.no.MP` = Var1, Promotoria = Var2, Total = Freq)
# Chunk 3
valueBox((contagem_total), icon = "fa-book", color = "green")
# Chunk 4
df_Prom %>%
group_by(Promotoria) %>%
ggplot(aes(x= Local,
y= Total)) +
geom_col() +
geom_label(aes(label = Total),
color = "white") +
theme(legend.position = "none") +
labs(x = "Promotorias",
y = "Total de lançamentos")
# Chunk 5
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total)) +
geom_col() +
geom_label(aes(label = Total),
color = "white") +
theme(legend.position = "none") +
labs(x = "Promotorias",
y = "Lançamentos")
# Chunk 6
df_data_saida <- planilha_controle[!is.na(planilha_controle$Data.da.saída),]
n_saida <- nrow(df_data_saida)
n_sem_responsavel <- nrow(df_data_saida[is.na(df_data_saida$Servidora.Responsável),])
n_sem_check_responsavel <- nrow(df_data_saida[is.na(df_data_saida$Check.list...responsável),])
# Chunk 7
valueBox(str_c("Existem ", n_saida, " registros "), icon = "fa-exclamation-circle", color = "teal")
# Chunk 8
valueBox(str_c("Existem ", n_saida, " registros "), icon = "fa-check-circle", color = "olive")
# Chunk 9
valueBox((contagem_total), icon = "fa-book", color = "green")
# Chunk 10
valueBox(nrow(planilha_controle %>% group_by(Procedimento) %>% distinct(Procedimento)), icon = "fa-inbox", color = "purple")
# Chunk 11
Promotoria1 <- planilha_controle %>% filter(Promotoria == "1ª PJF")
# Chunk 12
#Itens necessários:
#1- Quantidade de datas de saída sem que tenha uma "Servidora Responsável"
#(Obs: Para pegar erros)
#2- Quantidade de datas de saída sem que tenha um "Check-list - responsável"
#(*trata-se dos estagiários)    (Obs: Para pegar erros)
#3- Total de lançamentos(total de linhas) e total de procedimentos únicos (total de números MPRJ únicos)
# IGUAL à ABA DASHBOARD
#4- Tempo total do procedimento(SOMA(SAIDA-ENTRADA) * de todos os registros), de todos os procedimentos que
#estão na Secretaria.
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total,
fill = Local.no.MP)) +
geom_col() +
geom_label(aes(label = Total),
color = "white") +
theme(legend.position = "none") +
labs(x = "Promotorias",
y = "Lançamentos",
filter = "Local")
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total,
fill = Local.no.MP)) +
geom_bar(stat='identity', position='dodge') +
geom_col() +
geom_label(aes(label = Total),
color = "white") +
theme(legend.position = "none") +
labs(x = "Promotorias",
y = "Lançamentos",
filter = "Local")
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total,
fill = Local.no.MP)) +
geom_bar(stat='identity', position='dodge') +
geom_label(aes(label = Total),
color = "white") +
theme(legend.position = "none") +
labs(x = "Promotorias",
y = "Lançamentos",
filter = "Local")
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total,
fill = Local.no.MP)) +
geom_bar(stat='identity', position='dodge') +
geom_label(aes(label = Total) +
theme(legend.position = "none") +
labs(x = "Promotorias",
y = "Lançamentos",
filter = "Local")
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total,
fill = Local.no.MP)) +
geom_bar(stat='identity', position='dodge') +
geom_label aes(label = Total),
+
theme(legend.position = "none") +
labs(x = "Promotorias",
y = "Lançamentos",
filter = "Local")
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total,
fill = Local.no.MP)) +
geom_bar(stat='identity', position='dodge') +
geom_label aes(label = Total)
+
theme(legend.position = "none") +
labs(x = "Promotorias",
y = "Lançamentos",
filter = "Local")
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total,
fill = Local.no.MP)) +
geom_bar(stat='identity', position='dodge') +
geom_label (aes(label = Total))
+
theme(legend.position = "none") +
labs(x = "Promotorias",
y = "Lançamentos",
filter = "Local")
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total,
fill = Local.no.MP)) +
geom_bar(stat='identity', position='dodge') +
geom_label(aes(label = Total),
color = "white") +
theme(legend.position = "none") +
labs(x = "Promotorias",
y = "Lançamentos",
filter = "Local")
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total,
fill = Local.no.MP)) +
geom_bar(stat='identity', position='dodge') +
geom_label(aes(label = Total),
color = "white") +
theme(legend.position = "left") +
labs(x = "Promotorias",
y = "Lançamentos",
filter = "Local")
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total,
fill = Local.no.MP)) +
geom_bar(stat='identity', position='dodge') +
geom_label(aes(label = Total),
color = "white") +
theme(legend.position = "right") +
labs(x = "Promotorias",
y = "Lançamentos",
filter = "Local")
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total,
fill = Local.no.MP)) +
geom_bar(stat='identity', position='dodge') +
geom_label(aes(label = Total),
color = "white") +
theme(legend.position = "right", legend.title.align=0.5) +
labs(x = "Promotorias",
y = "Lançamentos",
filter = "Local")
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total,
fill = Local.no.MP)) +
geom_bar(stat='identity', position='dodge') +
geom_label(aes(label = Total),
color = "white") +
theme(legend.title.align=0.5) +
labs(x = "Promotorias",
y = "Lançamentos",
filter = "Local")
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total,
fill = Local.no.MP)) +
geom_bar(stat='identity', position='dodge') +
theme(legend.title.align = 0.5) +
labs(x = "Promotorias",
y = "Lançamentos",
filter = "Local")
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total,
fill = Local.no.MP)) +
geom_bar(stat='identity', position='dodge') +
geom_label(aes(label = Total),
color = "white") +
theme(legend.title.align = 0.5) +
labs(x = "Promotorias",
y = "Lançamentos",
filter = "Local")
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total,
fill = Local.no.MP)) +
geom_bar(stat='identity', position='dodge') +
geom_label(aes(label = Total)) +
theme(legend.title.align = 0.5) +
labs(x = "Promotorias",
y = "Lançamentos",
filter = "Local")
df_Local %>%
group_by(Local.no.MP) %>%
ggplot(aes(x= Promotoria,
y= Total,
fill = Local.no.MP)) +
geom_bar(stat='identity', position='dodge') +
# geom_label(aes(label = Total),
#            color = "white") +
theme(legend.title.align = 0.5) +
labs(x = "Promotorias",
y = "Lançamentos",
filter = "Local")
